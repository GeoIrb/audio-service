// Code generated by protoc-gen-go. DO NOT EDIT.
// source: recoder.proto

package grpc

import (
	"context"
	"fmt"
	"math"

	"github.com/golang/protobuf/proto"
	"google.golang.org/grpc"
	"google.golang.org/grpc/codes"
	"google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartRecodeRequest struct {
	Port                 string   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	DeviceName           string   `protobuf:"bytes,2,opt,name=deviceName,proto3" json:"deviceName,omitempty"`
	Channels             uint32   `protobuf:"varint,3,opt,name=channels,proto3" json:"channels,omitempty"`
	Rate                 uint32   `protobuf:"varint,4,opt,name=rate,proto3" json:"rate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRecodeRequest) Reset()         { *m = StartRecodeRequest{} }
func (m *StartRecodeRequest) String() string { return proto.CompactTextString(m) }
func (*StartRecodeRequest) ProtoMessage()    {}
func (*StartRecodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a2f3b1cb98453f8, []int{0}
}

func (m *StartRecodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRecodeRequest.Unmarshal(m, b)
}
func (m *StartRecodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRecodeRequest.Marshal(b, m, deterministic)
}
func (m *StartRecodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRecodeRequest.Merge(m, src)
}
func (m *StartRecodeRequest) XXX_Size() int {
	return xxx_messageInfo_StartRecodeRequest.Size(m)
}
func (m *StartRecodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRecodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartRecodeRequest proto.InternalMessageInfo

func (m *StartRecodeRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *StartRecodeRequest) GetDeviceName() string {
	if m != nil {
		return m.DeviceName
	}
	return ""
}

func (m *StartRecodeRequest) GetChannels() uint32 {
	if m != nil {
		return m.Channels
	}
	return 0
}

func (m *StartRecodeRequest) GetRate() uint32 {
	if m != nil {
		return m.Rate
	}
	return 0
}

type StartRecodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRecodeResponse) Reset()         { *m = StartRecodeResponse{} }
func (m *StartRecodeResponse) String() string { return proto.CompactTextString(m) }
func (*StartRecodeResponse) ProtoMessage()    {}
func (*StartRecodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a2f3b1cb98453f8, []int{1}
}

func (m *StartRecodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRecodeResponse.Unmarshal(m, b)
}
func (m *StartRecodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRecodeResponse.Marshal(b, m, deterministic)
}
func (m *StartRecodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRecodeResponse.Merge(m, src)
}
func (m *StartRecodeResponse) XXX_Size() int {
	return xxx_messageInfo_StartRecodeResponse.Size(m)
}
func (m *StartRecodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRecodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartRecodeResponse proto.InternalMessageInfo

type StopRecodeRequest struct {
	Port                 string   `protobuf:"bytes,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRecodeRequest) Reset()         { *m = StopRecodeRequest{} }
func (m *StopRecodeRequest) String() string { return proto.CompactTextString(m) }
func (*StopRecodeRequest) ProtoMessage()    {}
func (*StopRecodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a2f3b1cb98453f8, []int{2}
}

func (m *StopRecodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRecodeRequest.Unmarshal(m, b)
}
func (m *StopRecodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRecodeRequest.Marshal(b, m, deterministic)
}
func (m *StopRecodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRecodeRequest.Merge(m, src)
}
func (m *StopRecodeRequest) XXX_Size() int {
	return xxx_messageInfo_StopRecodeRequest.Size(m)
}
func (m *StopRecodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRecodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopRecodeRequest proto.InternalMessageInfo

func (m *StopRecodeRequest) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

type StopRecodeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRecodeResponse) Reset()         { *m = StopRecodeResponse{} }
func (m *StopRecodeResponse) String() string { return proto.CompactTextString(m) }
func (*StopRecodeResponse) ProtoMessage()    {}
func (*StopRecodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a2f3b1cb98453f8, []int{3}
}

func (m *StopRecodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRecodeResponse.Unmarshal(m, b)
}
func (m *StopRecodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRecodeResponse.Marshal(b, m, deterministic)
}
func (m *StopRecodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRecodeResponse.Merge(m, src)
}
func (m *StopRecodeResponse) XXX_Size() int {
	return xxx_messageInfo_StopRecodeResponse.Size(m)
}
func (m *StopRecodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRecodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopRecodeResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*StartRecodeRequest)(nil), "recoder.StartRecodeRequest")
	proto.RegisterType((*StartRecodeResponse)(nil), "recoder.StartRecodeResponse")
	proto.RegisterType((*StopRecodeRequest)(nil), "recoder.StopRecodeRequest")
	proto.RegisterType((*StopRecodeResponse)(nil), "recoder.StopRecodeResponse")
}

func init() { proto.RegisterFile("recoder.proto", fileDescriptor_9a2f3b1cb98453f8) }

var fileDescriptor_9a2f3b1cb98453f8 = []byte{
	// 215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0x4a, 0x4d, 0xce,
	0x4f, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x2a, 0xb8,
	0x84, 0x82, 0x4b, 0x12, 0x8b, 0x4a, 0x82, 0xc0, 0xfc, 0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12,
	0x21, 0x21, 0x2e, 0x96, 0x82, 0xfc, 0xa2, 0x12, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30,
	0x5b, 0x48, 0x8e, 0x8b, 0x2b, 0x25, 0xb5, 0x2c, 0x33, 0x39, 0xd5, 0x2f, 0x31, 0x37, 0x55, 0x82,
	0x09, 0x2c, 0x83, 0x24, 0x22, 0x24, 0xc5, 0xc5, 0x91, 0x9c, 0x91, 0x98, 0x97, 0x97, 0x9a, 0x53,
	0x2c, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x1b, 0x04, 0xe7, 0x83, 0xcc, 0x2b, 0x4a, 0x2c, 0x49, 0x95,
	0x60, 0x01, 0x8b, 0x83, 0xd9, 0x4a, 0xa2, 0x5c, 0xc2, 0x28, 0x36, 0x17, 0x17, 0xe4, 0xe7, 0x15,
	0xa7, 0x2a, 0xa9, 0x73, 0x09, 0x06, 0x97, 0xe4, 0x17, 0x10, 0x74, 0x8f, 0x92, 0x08, 0xc8, 0xe5,
	0x08, 0x85, 0x10, 0xed, 0x46, 0xf3, 0x18, 0xb9, 0xd8, 0x21, 0x42, 0x45, 0x42, 0x5e, 0x5c, 0xdc,
	0x48, 0x36, 0x08, 0x49, 0xeb, 0xc1, 0xc2, 0x00, 0xd3, 0xc7, 0x52, 0x32, 0xd8, 0x25, 0xa1, 0x8e,
	0x62, 0x10, 0x72, 0xe7, 0xe2, 0x42, 0xd8, 0x26, 0x24, 0x85, 0xa4, 0x1a, 0xcd, 0xad, 0x52, 0xd2,
	0x58, 0xe5, 0x60, 0x06, 0x25, 0xb1, 0x81, 0x23, 0xc0, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x24,
	0x99, 0x97, 0x23, 0x91, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecoderClient is the client API for Recoder service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecoderClient interface {
	StartRecode(ctx context.Context, in *StartRecodeRequest, opts ...grpc.CallOption) (*StartRecodeResponse, error)
	StopRecode(ctx context.Context, in *StopRecodeRequest, opts ...grpc.CallOption) (*StopRecodeResponse, error)
}

type recoderClient struct {
	cc *grpc.ClientConn
}

func NewRecoderClient(cc *grpc.ClientConn) RecoderClient {
	return &recoderClient{cc}
}

func (c *recoderClient) StartRecode(ctx context.Context, in *StartRecodeRequest, opts ...grpc.CallOption) (*StartRecodeResponse, error) {
	out := new(StartRecodeResponse)
	err := c.cc.Invoke(ctx, "/recoder.Recoder/StartRecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *recoderClient) StopRecode(ctx context.Context, in *StopRecodeRequest, opts ...grpc.CallOption) (*StopRecodeResponse, error) {
	out := new(StopRecodeResponse)
	err := c.cc.Invoke(ctx, "/recoder.Recoder/StopRecode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RecoderServer is the server API for Recoder service.
type RecoderServer interface {
	StartRecode(context.Context, *StartRecodeRequest) (*StartRecodeResponse, error)
	StopRecode(context.Context, *StopRecodeRequest) (*StopRecodeResponse, error)
}

// UnimplementedRecoderServer can be embedded to have forward compatible implementations.
type UnimplementedRecoderServer struct {
}

func (*UnimplementedRecoderServer) StartRecode(ctx context.Context, req *StartRecodeRequest) (*StartRecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartRecode not implemented")
}
func (*UnimplementedRecoderServer) StopRecode(ctx context.Context, req *StopRecodeRequest) (*StopRecodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopRecode not implemented")
}

func RegisterRecoderServer(s *grpc.Server, srv RecoderServer) {
	s.RegisterService(&_Recoder_serviceDesc, srv)
}

func _Recoder_StartRecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartRecodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoderServer).StartRecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recoder.Recoder/StartRecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoderServer).StartRecode(ctx, req.(*StartRecodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Recoder_StopRecode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopRecodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RecoderServer).StopRecode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/recoder.Recoder/StopRecode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RecoderServer).StopRecode(ctx, req.(*StopRecodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Recoder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recoder.Recoder",
	HandlerType: (*RecoderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartRecode",
			Handler:    _Recoder_StartRecode_Handler,
		},
		{
			MethodName: "StopRecode",
			Handler:    _Recoder_StopRecode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "recoder.proto",
}
